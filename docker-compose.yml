version: "3"

services:

  zookeeper:
    image: zookeeper:latest
    restart: unless-stopped
    ports:
      - 2181:2181

  kafka:
    image: bitnami/kafka:latest
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  mongo:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - data:/data/db

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root

  metabase:
    image: metabase/metabase:latest
    ports:
      - 3000:3000
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metadata:/metabase-data

  producer:
    build:
      context: .
      dockerfile: .docker/producer-and-consumer/Dockerfile
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      KAFKA_CLIENT_ID: pucrs
      KAFKA_GROUP_ID: pucrs
    command: [
      npx,
      yarn,
      start:producer
    ]

  consumer:
    build:
      context: .
      dockerfile: .docker/producer-and-consumer/Dockerfile
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      DATABASE_HOST: mongo
      DATABASE_NAME: admin
      DATABASE_PASSWORD: root
      DATABASE_PORT: 27017
      DATABASE_USER: root
      KAFKA_BROKERCONNECT: kafka:9092
      KAFKA_CLIENT_ID: pucrs
      KAFKA_GROUP_ID: pucrs

    command: [
      npx,
      yarn,
      start:consumer
    ]

volumes:

  data:
  metadata:
